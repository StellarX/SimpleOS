项目说明：   一个32位的操作系统（目前已实现中断处理、内存管理、图层叠加处理）
文件编译过程图：https://www.processon.com/view/link/5bac826ee4b0bd4db94e91c1
GDT表模型：https://www.processon.com/view/link/5bad7f8fe4b0fe81b6499b99

z_tools文件夹：项目工具

os文件夹内：项目源代码
ipl10.nas：启动程序加载器（将OS从磁盘读入内存）
os源代码：
	asmhead.nas:  对OS的各种设置，以及为了调用bootpack所写的程序
	naskfunc.nas：存放用汇编写的函数，编译后与bootpack.obj链接
	bootpack.h：常数设定和各种函数、结构体的声明
	bootpack.c:  OS主函数
	dsctbl.c：OS有关GDT、IDT设定的源程序
	graphic.c：绘制图像的源程序
	int.c：初始化PIC（可编程中断控制器），以及其他中断处理程序
	fifo.c：循环队列缓冲区的初始化、读写数据等操作
	keyboard.c：初始化键盘控制电路以及键盘中断处理程序
	mouse.c：激活鼠标、鼠标信息解读、鼠标中断处理程序
	sheet.c:有关图层和叠加处理的程序
	memory.c：与内存管理相关的程序
	hankaku.txt: 字体数据
Makefile：包括文件生成规则和命令
make.bat：调用make.exe(这个内部的命令不懂)，而make.exe的作用是进入makefile文件，然后执行里面的命令

改动说明：
11.2
制作一个计数器窗口；
解决一些棘手的图层显示问题

11.1
绘制一个窗口图层

10.3
提高叠加处理速度（2）

10.2
提高叠加处理速度（1）

10.1
把内存管理的代码放入memory.c中
同时编写以0x1000为单位进行内存分配和释放的函数（之前是以1字节为单位）
 
创建一个管理多重图层信息的结构
添加sheet.c文件：存放图层处理的代码
创建桌面和鼠标两个图层，解决8.1遗留的问题

9.3
建立内存管理表；
添加内存分配、释放函数

9.2
内存容量检查

9.1
整理源代码：添加keyboard.c、mouse.c

8.1
鼠标数据的解读1（把接收到的数据分为3字节显示）；
鼠标数据的解读2（更加细致：分为按键状态和移动信息）；
根据接收到的数据移动鼠标，移到下方任务栏时会擦除掉任务栏（存在问题）

7.3
对键盘控制电路进行一些设定后，激活鼠标；
创建鼠标缓冲区；
修改鼠标中断处理程序；
开始从鼠标接收数据，显示到屏幕

7.2
添加fifo.c文件，编写可变长循环队列缓冲区，用于接收按键编码

7.1
获取按键编码；
将中断处理程序中的绘制图像的程序移出，加快中断处理
将接收的按键编码存入缓冲变量

6.3
编写鼠标和键盘的中断处理程序（并注册到IDT表），具体执行过程：
	首先在naskfunc中执行用汇编写的中断现场保护的程序（asm_inthandler21），
	然后用call指令跳转到int.c中执行中断处理程序（void inthandler21(int *esp)），
	最后返回naskfunc执行恢复现场以及中断返回（IRETD）的程序
（注意：IDT表中注册的是naskfunc中汇编程序的起始地址）
最后解除鼠标、键盘的中断屏蔽位

6.2
添加int.c文件，用于初始化中断控制器PIC

6.1
添加头文件，分割编译

5.4
全局段号记录表GDT和中断记录表IDT初始化

5.3
显示变量的值和鼠标指针到屏幕

5.2
使用OSASK的字体数据hankaku.txt，将其编译为obj文件后和bootpack.obj链接；
添加绘制字符串的函数

5.1
使用结构体简化代码；
显示字符A

4.3 
绘制任务栏

4.2
处理了颜色问题（使用调色板方式）；
绘制矩形

4.1 
往显存写入数据

3.5 
添加naskfunc.nas文件，存放用汇编写的函数，编译后与bootpack.obj链接；
在bootpack里引用naskfunc.nas中的函数

3.4 
删除haribote.nas ，分解为asmhead.nas和bootpack.c；
32位模式前期准备（从BIOS得到键盘状态、保存当前画面模式到内存 etc.）；
设置显卡内存；
开始导入C语言；
makefile文件里添加了相关文件生成规则

3.3
在haribote.nas中添加设定画面模式的代码；
在ipl执行完后，OS被装载到了内存，所以JMP到haribote在内存中的位置，执行OS
ipl文件名改为ipl10（10个柱面）

3.2
读盘程序/启动程序加载器已经制作完成，开始着手开发操作系统；
添加haribote.nas文件(os目前就存放于此)，将其编译为sys文件，并保存到img文件（借助edimg.exe）